<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="TextPwd.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABGdBTUEAALGPC/xhBQAAAZRJREFUSEu9
        VttKAzEU7IsKXh6EXZKsbUXZt36I6Hd4qeh36O8Ion6MIFXES8F3pQ91jp000abGxujAwHbOnMnuSTdt
        Iwal1FKl9bEx5kxrfW20fhF+XI+0o6qqFmlPA0K2EfoMDiN8wqJbbJsNWGQHAYMvgd9xID1s/xmKolhB
        46MXclMptYsxbrTb7VWhXOMp9qRmfRjxQ1mWy4yJAwFd2wzeYWHD0gSwPwU8t9aPpzpkKQ40XNlGLHpA
        eSrg2R/7tb6kHAfM47HJiChPBTyb1m+UuqccBxrebGOn05mnPBV1XS+MF9L6lXIcXtOQUhQpPX+OOWzq
        Ke6o599dInuSJZmjaA9cJNSUTmNOGO8gL1vQ/AtKJuMdQsYcZLxDyJSDjHcImXKQ8Q5+EbM9lxOBb/xF
        qi5kvINfxEHZoizfxvVUXUjZwS82m801ynI6t1J1IWUHvyijaBVFJQH4/GlEs+hCxjv4xZxkvEPIlIOM
        dwiZcpDxDhD9/whZiL0LHEH/dagC9meiP9EwO/uSJZmj6EbjHRbs8Mw/xi16AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="TextUsername.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABGdBTUEAALGPC/xhBQAAAixJREFUSEvF
        Vb1KXEEYvWm1SFbZmTt3N7AYSJFCC7uARCQgwSZPYCsoKBJCEkMs/CmUNJY2VuIbJGVk8wqaF7DaNIZo
        iKjZNee7nk92du+P7ooeOLDfnDPfmTt37k5wL4isfenCsAoeghcdUuZWoyh6zbY+ojBcgqHRNKF7WrvC
        9pew1o5BaCDsDE/1HqvpoXRjoFcvAuakF3rWwzB8QSkIMCDbdQHxHYe6BsIW2PMbh+KgYxmsVCqPONSK
        B1jZDDx7YA38UjZmkFoiyuVyn/QEf3MoDor3lGUbsLpl9TTxFKxhAdO0tUG9LLODjDFPoJ2rJ4H1kjFD
        tHtQD8vsIKz4k+pphGeRdg+qs8wOcs7tqJ5GBG3R7kF1ljlB1m6rnsZbCcJ3Nat6KnGUafegOsvcJ1pR
        PY34VtZp96A6y5wg5z6qnkZs3RrtHlRnmR1UKpWeQss63v+wmGHaPaiHZXaQAI2m1NPKtKMtUA/L/KBC
        ofAQ7+qX+pr4p1gshrS1QX0s84MECJpT3xWdW6WcCPWxvF4QTtZn9SmxbZOUE6E+lulBkTHPseoNaD/U
        08I6uIvAN7jDHnPaFdTHMh6Irwl5F1Jj4jPUX9V4TZ5iezfxJ2ylB05rP8ePpI4hl1M86Nw8OILff2nq
        hAe4ZQew2LdSexcfBidokjvmJ393w31Qesl7fMWYS+CxP0CQPU+a2Akb6LnM9j6QPgrDd/CkacJNKXOr
        eAXjbHuXCIL/Xe2n1rP8xmwAAAAASUVORK5CYII=
</value>
  </data>
</root>