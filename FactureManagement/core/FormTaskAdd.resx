<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="inputDesignTask.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>